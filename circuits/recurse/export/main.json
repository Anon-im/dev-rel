{"noir_version":"0.26.0+c46b164ce56e6a8f81255fb17eb6539bd040f336","hash":12993080274337799997,"abi":{"parameters":[{"name":"x","type":{"kind":"field"},"visibility":"private"},{"name":"y","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"x":[{"start":0,"end":1}],"y":[{"start":1,"end":2}]},"return_type":{"abi_type":{"kind":"boolean"},"visibility":"public"},"return_witnesses":[25]},"bytecode":"H4sIAAAAAAAA/+1X207jMBCdNN3QUGDJsrD0A/Z9nHve+JWmJP//tI8LNThoGowqkTNVK9VS5CiX4zM3e05A72O1vf66+3B7zejzCNz85GaeNgwQiz10MdiGWfpiJnwUufvI8176TP7zMno3zIH4/0X84/sm+AJn6eGReJ4FNBpPbuZpwwzG2uufMN4avhitGYLXllgZl3neVWlnMrPmtGnrgvOiLWtTm6IuntM6y7o6r6umbSpuTJ51pi+arOvtYDMDYPWOWEg6ST4D+w9p83wHa/vtOs3LruCyq5u6a6q+qHiz7vvnivNNy22bl5yZrG+rlNu02S7bdMXGvPEKyZOwhN+M5jgslnx/uMuOyMN/GKHnfiG++0/YWpFrjbkkHp5qm4YER2HOndPRuBHhikTL7ggfIy9XxMYYKeBeELaQ7cZoMWM6XGekdWiA8yKVvhgO+Ji+1xnFo3fDLDujmPZ3Rj6co+mMrJMuhPExfX0SoNaWyTStM+r7BeEKNcbZyIcqzIBOoDBHkuXSzbYIzpJl5KrBWOskKVksMW3JIpNpqmS5JFxhLkknydGSBWnzFZ2eZLnCYe1Ilms6S5a9ZDSCea2Ae0PHLVms3Tf4GKlIlqXjisb9SdhCthutxTykZNE6NMB5sSNZbt1sN4+zZNkdH52RdZKULAnpSxaZTFMlyy3hCjUhnSQfd0ZIaTUV6xcwrpo2J0CsOyWbQ7DNyJoLgLx+43jxobppJGfJ957O3fReMhrBvFfAfaDj7qat3Q/4GKlwtQfLHeG76T90Goc0Mpce6bjr0cbkUSHWK3CsZccfeO5X4hm9Ao/vA4c8IwAA","debug_symbols":"tdfRCoJAEAXQf5lnH9wZ3V39lehhKwNBLNKCEP89F7WC1kDkvjns3AMiF9yOqsvRteWlbijvKKZ811FzdbWfmtbdWsqVshEV9Wl4Et1HdC6rgvLE9NHvKifvVfVZtf0+IgW0GWgL0E6Adgq0NdA2QNsC7QzZne3FlNDqiCskzkhckHi4nEk2J7TZ8EFTJK6RuEHiFolnQJxjJK6QOCNxQeLbG7pcf06RuEbiBokvNJTDuE9kaxMS7pKNpwTH8v8FtJo2v+nxZ07haMbRgqPDHTISpn0iXZcYhoe7le5QFf6O4c/u9XG+cgxj+7yOJ/0L","file_map":{"47":{"source":"use dep::std;\nuse dep::simple;\n\n// #[recursive]\n#[export]\nfn main(x: Field, y: Field) -> pub bool {\n    let mut res = simple::not_odd(x);\n    res &= simple::not_odd(y);\n    res &= simple::not_equal(x, y);\n    res\n}\n\n#[test]\nfn test_not_equal() {\n    assert(main(2, 4));\n    // Uncomment to make test fail\n    // assert(not_equal(1, 1));\n}\n","path":"/home/jz/Documents/code/aztec/recurseNoirTS/circuits/recurse/src/lib.nr"},"48":{"source":"#[export]\npub fn not_equal(x: Field, y: Field) -> bool {\n    x != y\n}\n\n#[export]\npub fn not_odd(x: Field) -> bool {\n    !(((x as u8) & 1) as bool)\n}\n\n#[test]\nfn test_not_equal() {\n    assert(not_equal(1, 2));\n    // Uncomment to make test fail\n    // assert(not_equal(1, 1));\n}\n\nfn test_not_odd() {\n    assert(not_odd(2));\n    // Uncomment to make test fail\n    // assert(not_equal(1, 1));\n}\n","path":"/home/jz/Documents/code/aztec/recurseNoirTS/circuits/simple/src/lib.nr"}}}